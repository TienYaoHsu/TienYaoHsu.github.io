<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Verilog on TienYao@Tech</title>
    <link>http://localhost:10707/categories/verilog/</link>
    <description>Recent content in Verilog on TienYao@Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2025 TienYao</copyright>
    <lastBuildDate>Tue, 11 Feb 2025 09:24:56 +0800</lastBuildDate><atom:link href="http://localhost:10707/categories/verilog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>🔢 數位除法器設計與實現 - 基於FPGA的移位除法算法</title>
      <link>http://localhost:10707/posts/fpga_divider/</link>
      <pubDate>Tue, 11 Feb 2025 09:24:56 +0800</pubDate>
      
      <guid>http://localhost:10707/posts/fpga_divider/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;🔢 數位除法器設計與實現 - 基於FPGA的移位除法算法 
    &lt;div id=&#34;-%E6%95%B8%E4%BD%8D%E9%99%A4%E6%B3%95%E5%99%A8%E8%A8%AD%E8%A8%88%E8%88%87%E5%AF%A6%E7%8F%BE---%E5%9F%BA%E6%96%BCfpga%E7%9A%84%E7%A7%BB%E4%BD%8D%E9%99%A4%E6%B3%95%E7%AE%97%E6%B3%95&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#-%E6%95%B8%E4%BD%8D%E9%99%A4%E6%B3%95%E5%99%A8%E8%A8%AD%E8%A8%88%E8%88%87%E5%AF%A6%E7%8F%BE---%E5%9F%BA%E6%96%BCfpga%E7%9A%84%E7%A7%BB%E4%BD%8D%E9%99%A4%E6%B3%95%E7%AE%97%E6%B3%95&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;


&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;div id=&#34;%E5%89%8D%E8%A8%80&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E5%89%8D%E8%A8%80&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;在數位電路設計中，除法運算是一個重要但相對複雜的算術操作。本文將介紹一個基於FPGA的32位元除法器設計，採用移位除法算法實現。這個設計不僅具有良好的可擴展性，還提供了完整的測試驗證平台。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>🔧 Verilog HDL 訊號命名原則</title>
      <link>http://localhost:10707/posts/verilog_signal_name/</link>
      <pubDate>Tue, 11 Feb 2025 09:23:41 +0800</pubDate>
      
      <guid>http://localhost:10707/posts/verilog_signal_name/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;🔧 Verilog HDL 訊號命名原則 
    &lt;div id=&#34;-verilog-hdl-%E8%A8%8A%E8%99%9F%E5%91%BD%E5%90%8D%E5%8E%9F%E5%89%87&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#-verilog-hdl-%E8%A8%8A%E8%99%9F%E5%91%BD%E5%90%8D%E5%8E%9F%E5%89%87&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;


&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;div id=&#34;%E5%89%8D%E8%A8%80&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E5%89%8D%E8%A8%80&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;在數位電路設計中，良好的訊號命名原則與 coding style 同等重要。特別是在大型設計專案中，清晰的命名方式不僅能讓代碼更容易維護，也能幫助團隊成員快速理解訊號特性並進行除錯。本文將介紹常用的 Verilog HDL 訊號命名規則。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>🔧 數字電路毛刺濾波器設計與實現</title>
      <link>http://localhost:10707/posts/digital_filter/</link>
      <pubDate>Tue, 11 Feb 2025 09:18:06 +0800</pubDate>
      
      <guid>http://localhost:10707/posts/digital_filter/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;🔧 數字電路毛刺濾波器設計與實現 
    &lt;div id=&#34;-%E6%95%B8%E5%AD%97%E9%9B%BB%E8%B7%AF%E6%AF%9B%E5%88%BA%E6%BF%BE%E6%B3%A2%E5%99%A8%E8%A8%AD%E8%A8%88%E8%88%87%E5%AF%A6%E7%8F%BE&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#-%E6%95%B8%E5%AD%97%E9%9B%BB%E8%B7%AF%E6%AF%9B%E5%88%BA%E6%BF%BE%E6%B3%A2%E5%99%A8%E8%A8%AD%E8%A8%88%E8%88%87%E5%AF%A6%E7%8F%BE&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;


&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;div id=&#34;%E5%89%8D%E8%A8%80&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E5%89%8D%E8%A8%80&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;在數位電路設計中，信號毛刺（Glitch）是一個常見的問題，常見於按鍵去彈跳、外部信號輸入處理、需要穩定信號的控制系統、數位電路中的雜訊處理等。本文將介紹一個使用Verilog實現的毛刺濾波器設計，該濾波器可以有效過濾掉輸入信號中的短暫毛刺，提高系統的穩定性。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
